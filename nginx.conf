user www-data;  # Nginx 起動ユーザ
pid /run/nginx.pid;

worker_processes auto;  # Nginxでマシンのコア数分だけ使う
worker_rlimit_nofile 100000;  # ファイルディスクリプタの上限(要サーバパラメータチューニング)

events {
    # 同時接続クライアント数の上限は worker_processes * worker_connections
    worker_connections 65536;  # 接続可能クライアント数(要サーバパラメータチューニング)
    accept_mutex_delay 100ms;  # mutexの確保失敗時の待機時間をデフォルトの500msより短くする
    multi_accept on;  # 同時接続を許可
    use epoll;  # ファイルディスクリプタの状態をカーネルに問い合わせることで高速化(デフォルト設定)
}

http {

    ##
    # Basic Settings
    ##

    server_tokens off;  # サーバのバージョン情報を通知しない(Nginxということは伝わる)
    sendfile on;  # レスポンス処理をカーネルに任せることで高速化
    tcp_nopush on;  # レスポンスのヘッダと内容をひとまとめに送りパケット数を減らす
    tcp_nodelay on;  # バッファリングを無効化しパケットの送信を高速化する(デフォルトで有効化)

    keepalive_timeout 120;  # タイムアウト時間(AWS推奨値の120秒)
    keepalive_requests 100000;  # タイムアウト時間までに同じクライアントからの接続要求をいくつまで許可するか
    send_timeout 10;  # クライアントへのレスポンスタイムアウト
    reset_timedout_connection on;  # 非アクティブコネクションのクライアントをクローズする
    types_hash_max_size 2048;  # タイプハッシュテーブルの最大値をデフォルトの倍にする

    limit_conn_zone $binary_remote_addr zone=addr:5m;  # アドレスあたりの同時接続数の制限
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;  # ipあたりの同時接続数制限
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=5r/s;  # ipあたりの同時接続数に対する速度制限
    client_header_timeout 10;  # クライアントタイムアウト秒（ヘッダ）
    client_body_timeout 10;  # クライアントタイムアウト秒（ボディ）
    client_body_buffer_size 128k;  # リクエストボディのバッファサイズ
    client_header_buffer_size 3m;  # ヘッダのバッファサイズ
    large_client_header_buffers 4 256k;  # ヘッダのバッファサイズ（これを超えると414エラーが返る）

    include /etc/nginx/mime.types;  # MIMEの定義ファイル
    default_type application/octet-stream;  # デフォルトのMIME

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1.2;  # TLSv1.2のみを有効化
    ssl_prefer_server_ciphers on;  # サーバ側で定義した暗号化アルゴリズムを優先的に使用するよう強制する
    ssl_ciphers 'EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:!ECDH+AES128';  # 使用する暗号化アルゴリズム(ECDSA・CHACHA20・AES256以上のみを使用、DESは使わない)
    ssl_ecdh_curve secp521r1:secp384r1;  # ECDHE 鍵の暗号化カーブの指定(secp256以下は使用しない)
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;  # DHE暗号用の秘密鍵
    ssl_stapling on;  # OCSP情報をサーバ上にキャッシュし高速化する
    ssl_session_cache builtin:1000 shared:SSL:10m;  # SSLセッションのキャッシュ

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;  # パフォーマンスを求める場合は off にする
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip on;  # レスポンスを gzip で圧縮
    gzip_disable "msie6";  # ie6はgzip対象外

    gzip_proxied any;  # あらゆるリクエストに対しgzipを有効か
    gzip_comp_level 6;  # 圧縮レベル
    gzip_http_version 1.1;  # gzip圧縮を行うhttpバージョン(HTTP 1.0 にはgzip圧縮を適用しない)
    gzip_min_length 1024;  # gzip圧縮を適用する最低限のサイズ
    gzip_types text/plain text/css application/json application/x-javascript application/javascript text/xml application/xml application/xml+rss text/javascript;  # gzip圧縮を適用する対象のMIMEタイプ

    open_file_cache max=100000 inactive=20s;  # サーバ上ファイルをNginxにキャッシュさせる(100000までのファイルをキャッシュし、20秒以上の非アクティブファイルはクリアする)
    open_file_cache_valid 30s;  # 30秒ごとにアクティブか確認する
    open_file_cache_min_uses 2;  # 非アクティブファイルの最小ファイル数
    open_file_cache_errors on;  # ファイルのエラー情報もキャッシュする

    ##
    # Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
    
}